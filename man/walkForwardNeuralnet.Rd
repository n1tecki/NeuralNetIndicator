% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/walkForwardNeuralnet.R
\name{walkForwardNeuralnet}
\alias{walkForwardNeuralnet}
\title{Calculation of oscillating trading indicator}
\usage{
walkForwardNeuralnet(
  symbols,
  trad_col,
  neurons_int,
  in_sample,
  out_sample,
  slid = 3,
  algorithm = "rprop+",
  smooth = "3R",
  stepmax = 1e+05,
  threshold = 0.5,
  rep = 2,
  learningrate.limit = NULL,
  learningrate.factor = list(minus = 0.5, plus = 1.2),
  learningrate = NULL
)
}
\arguments{
\item{symbols}{a xts/zoo/matrix object or data frame containing all reference asset prices, with each column containing
\strong{one} price type (opening-price/high-price/low-price/closing-price/...). Time-steps and time-intervals
must be identical with all stock prices. Such a xts object can be simply created using this package's
\code{\link{getReferenceSymbols}} function.}

\item{trad_col}{a numerical value or string, that points to the column containing asset prices of interest
in \strong{symbols}. The price predictions and indicator are made for the selected prices.}

\item{neurons_int}{an integer or vector of integers setting the number of neurons (vertices) in each layer.}

\item{in_sample}{a numerical value that sets the size of the out-of-sample window size of the
walk-forward training.}

\item{slid}{a numerical value that sets how many time-steps into the future the price should be calculated.}

\item{algorithm}{a string containing the algorithm type to calculate the neural network.
The following types are possible:
\itemize{
   \item 'backprop'
   \item 'rprop+'
   \item 'rprop-'
   \item 'sag'
   \item 'slr'
}
'backprop' refers to backpropagation, 'rprop+' and 'rprop-' refer to the resilient backpropagation
with and without weight backtracking, while 'sag' and 'slr' induce the usage of the modified globally
convergent algorithm (grprop).}

\item{smooth}{a character string indicating the kind of smoother required that is used to smooth the indicator
values; '3RS3R', '3RSS', '3RSR', '3R', '3' and 'S' are possible. Default is 3R.
More information on the \code{\link{smooth}} function documentation}

\item{stepmax}{the maximum steps for the training of the neural network. Reaching this maximum leads
to a stop of the neural network's training process.}

\item{threshold}{a numeric value specifying the threshold for the partial derivatives of the error function
as stopping criteria.}

\item{rep}{the number of repetitions for the neural network's training.}

\item{learningrate.limit}{a vector or a list containing the lowest and highest limit for the learning rate.
Used only for RPROP and GRPROP.}

\item{learningrate.factor}{a vector or a list containing the multiplication factors for the upper and
lower learning rate. Used only for RPROP and GRPROP}

\item{learningrate}{a numeric value specifying the learning rate used by traditional backpropagation.
Used only for traditional backpropagation.}
}
\value{
xts file with 3 columns - the prices of the traded stock, the related price forecasts and the
indicator values for each trading day
}
\description{
The \code{\link{walkForwardNeuralnet}} function takes prices
of multiple stocks (preferably of the same financial sector).\cr
Based on those reference stock prices, an indicator is calculated using price forecasts.\cr
The forecasts are calculated by an artificial neural network using walk-forward training over the price data.\cr
Thereby Z-score normalization is applied on every in-sample calibration, feeding the neural networks\cr
training function with the normalized prices. The trained model is then applied on the out-of-sample
prices,\cr before re-calibrating the model anew.
}
\details{
Further information about input parameters \strong{algorithm}, \strong{stepmax}, \strong{threshold},
\strong{rep}, \strong{learningrate.limit}, \strong{learningrate.factor} and \strong{learningrate}
can be found at the \code{\link{neuralnet}} function documentation.
}
\examples{
walkForwardNeuralnet(symbols, trad_col=1, neurons_int = c(3,5), in_sample = 700, out_sample = 60, slid = 4)
}
